/*
从顺序表中删除具有最小值的元素，假设唯一，并由函数返回被删除元素的值。
空出的位置由最后一个元素填补，若顺序表为空，则显示出错误信息并退出运行
*/
using namespace std;
#define Max 50
struct SqList {
	int a[Max] = { 2,3,4,6,7,78,8,9 };
	int length = 8;
};
bool Listdelect(SqList &s, int &val)
{
	if (s.length == 0)
	{
		return false;
	}
	int min = s.a[0];
	int flag = 0;
	for (int i = 1; i < s.length; i++)
	{
		if (s.a[i] < min)
		{
			min = s.a[i];
			flag = i;
		}
	}
	val = s.a[flag];
	s.a[flag] = s.a[s.length - 1];
	return true;
}
int main()
{
	SqList s;
	cout << "修改之前的数组为：" << endl;
	for (int i = 0; i < s.length; i++)
	{
		cout << s.a[i] << " ";
	}
	cout << endl;
	int k = 0;
	if (Listdelect(s, k))
	{
		cout << "最小元素min=" << k << endl;
		cout << "修改之后的数组为：" << endl;
		for (int i = 0; i < s.length; i++)
		{
			cout << s.a[i] << " ";
		}
		cout << endl;
	}
	else
	{
		cout << "输入有误" << endl;
	}
	return 0;
}
